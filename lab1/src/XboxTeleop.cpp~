/* Created by Tony Schneider on 9/12/2013
 * 
 * XboxTeleop.cpp
 *
 * This node is used to receive messages from the
 * joystick sensor node and publish them to the
 * hovercraft's thrusters.
 */

#include <ros/ros.h>
#include <hovercraft/Thruster.h>
#include <sensor_msgs/Joy.h>
#include <iostream>
#include <ros/console.h>
class XboxTeleop
{
public:
  XboxTeleop();
  void joyCallback(const sensor_msgs::Joy::ConstPtr& joy);

private:
  ros::NodeHandle nh_;
  ros::Publisher thruster_pub;
  ros::Subscriber joy_sub;
};

XboxTeleop::XboxTeleop()
{
  thruster_pub = nh_.advertise<hovercraft::Thruster>("hovercraft/thruster", 1);
  joy_sub = nh_.subscribe<sensor_msgs::Joy>("joy", 10, &XboxTeleop::JoyCallback, this);
}

void XboxTeleop::joyCallback(const sensor_msgs::Joy::ConstPtr& joy)
{
  hovercraft::thruster thrust;
  //turtlesim::Velocity vel;
  // vel.angular = a_scale_*joy->axes[angular_];
  // vel.linear = l_scale_*joy->axes[linear_];
  //   vel_pub_.publish(vel);
}

int main(int argc, char** argv)
{
  ros::init(argc, argv, "xbox_teleop");
  XboxTeleop xbox_teleop;
  ros::spin();
}
